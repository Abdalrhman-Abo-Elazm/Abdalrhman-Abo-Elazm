# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.
on:
  schedule:
    # every 6 hours
    - cron: "0 */6 * * *"

  # This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:

# The sequence of runs in this workflow:
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v2

      # Generates the snake  
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: Abdalrhman-Abo-Elazm
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      # show the status of the build. Makes it easier for debugging (if there's any issues).
      - run: git status

      # Push the changes
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Cache Action
  cache:
    uses: actions/cache@v4.0.2
    with:
      # A list of files, directories, and wildcard patterns to cache and restore
      path: 
      # An explicit key for restoring and saving the cache
      key: 
      # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
      restore-keys: # optional
      # The chunk size used to split up large files during upload, in bytes
      upload-chunk-size: # optional
      # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
      enableCrossOsArchive: # optional, default is false
      # Fail the workflow if cache entry is not found
      fail-on-cache-miss: # optional, default is false
      # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
      lookup-only: # optional, default is false
      # Run the post step to save the cache even if another step before fails
      save-always: # optional, default is false
